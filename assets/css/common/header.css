.nav {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    max-width: calc(var(--nav-width) + var(--gap) * 2);
    margin-inline-start: auto;
    margin-inline-end: auto;
    line-height: var(--header-height);
}

.nav a {
    display: block;
    text-decoration: none;
}

.logo,
#menu {
    display: flex;
    margin: auto var(--gap);
}

.logo {
    flex-wrap: inherit;
}

.logo a {
    font-size: 24px;
    font-weight: 700;
}

.logo a img, .logo a svg {
    display: inline;
    vertical-align: middle;
    pointer-events: none;
    transform: translate(0, -10%);
    border-radius: 6px;
    margin-inline-end: 8px;
}

button#theme-toggle {
    font-size: 26px;
    margin: auto 4px;
}

body.dark #moon {
    vertical-align: middle;
    display: none;
}

body:not(.dark) #sun {
    display: none;
}

#menu {
    list-style: none;
    word-break: keep-all;
    overflow-x: auto;
    white-space: nowrap;
}

#menu li + li {
    margin-inline-start: var(--gap);
}

#menu a {
    font-size: 16px;
}

#menu .active {
    font-weight: 500;
}

.lang-switch li,
.lang-switch ul,
.logo-switches {
    display: inline-flex;
    margin: auto 4px;
}

.lang-switch {
    display: flex;
    flex-wrap: inherit;
}

.lang-switch a {
    margin: auto 3px;
    font-size: 16px;
    font-weight: 500;
}

.logo-switches {
    flex-wrap: inherit;
}

.logo {
    position: relative;
    font-family: Monaco, Arial, Helvetica, sans-serif;
    line-height: 24px;
    font-size: 24px;
    color: var(--header); /* Add a semicolon here */
    min-width: 360px;
}

.logo::after {
    content: "";
    position: relative;
    top: 1px;
    right: -8px;
    /* Remove display: inline-block if not required to be on the same line as text etc */
    display: inline-block;
    background-color: #fff1b0;
    vertical-align: top;
    width: 12px;
    /* Set height to the line height of .text */
    height: 20px; /* Adjusted to match the line height */
    /* 
    Animation parameters:
    blink = animation-name, 
    1s = animation-duration, 
    step-end = animation-timing-function,
    infinite = animation-iteration-count
    */
    -webkit-animation: blink 1s step-end infinite;
    animation: blink 1s step-end infinite;
}

@-webkit-keyframes blink {
    0% {
    opacity: 1.0;
    }
    50% {
    opacity: 0.0;
    }
    100% {
    opacity: 1.0;
    }
}

@keyframes blink {
    0% {
    opacity: 1.0;
    }
    50% {
    opacity: 0.0;
    }
    100% {
    opacity: 1.0;
    }
}
